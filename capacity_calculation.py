#!/usr/bin/python
"""This script will calculate the storage capacity required for a Zabbix installation in a large environment"""
class Capacity(object):
    def __init__(self):
        try:
            self.hosts = int(raw_input('No of hosts to monitor:'))
            self.items_per_host = int(raw_input('No of monitors per host:'))
            self.monitor_frequency = int(raw_input('Monitor frequency(seconds):'))
            self.history_item_size = int(
                raw_input('Average size of a historical data receieved (Default = 50B):') or 50)
            self.trend_item_size = int(raw_input('Average size of a trend data (Default = 128B):') or 128)
            self.event_size = int(raw_input('Average size of a event data (Default = 130B):') or 130)
            self.history_period = int(raw_input('Historical data retention period(days):'))
            self.trend_period = int(raw_input('Trend data retention period(days):'))
            self.events = int(raw_input('No of events per second(Default = 1):') or 1)
        except:
            print "Wrong input values entered or missing information"

    def nvps(self):
        vps = (self.hosts * self.items_per_host) / self.monitor_frequency
        return vps

    # Depending on the database engine used, type of received values
    # (floats, integers, strings, log files, etc), the disk space for keeping a single value
    # may vary from 40 bytes to hundreds of bytes. Normally it is around 50 bytes per value.
    # depending on database type, requires about 128 bytes per each total.
    # Suppose we would like to keep trend data for 6 months.
    # event requires approximately 130 bytes of disk space. It is hard to estimate the number of events
    # generated by Monza daily. In the worst case scenario, we may assume that Monza generates one
    # event per second.

    def dbsize(self):
        historysize = self.nvps() * self.history_item_size * self.history_period * 60 * 60 * 24
        trendsize = self.hosts * self.items_per_host * self.trend_item_size * self.trend_period * 24
        eventsize = self.events * self.event_size * 60 * 60 * 24 * 365
        dbsize = historysize + trendsize + eventsize
        return dbsize


if __name__ == '__main__':
    site1 = Capacity()
    print ""
    print "New Values per Second = ", site1.nvps()
    print "Database size for history, trend and events data = ", site1.dbsize() / (1024 * 1024 * 1024), "GB"
