#!/usr/bin/python

class Capacity(object):
    def __init__(self,
                 hosts,
                 items_per_host,
                 monitor_frequency,
                 history_item_size,
                 trend_item_size,
                 event_size,
                 history_period,
                 trend_period,
                 events_freq):
        self.hosts = hosts
        self.items_per_host = items_per_host
        self.monitor_frequency = monitor_frequency
        self.history_item_size = history_item_size
        self.trend_item_size = trend_item_size
        self.event_size = event_size
        self.history_period = history_period
        self.trend_period = trend_period
        self.events = events_freq

    def nvps(self):
        vps = (self.hosts * self.items_per_host) / self.monitor_frequency
        return vps

    # Depending on the database engine used, type of received values
    # (floats, integers, strings, log files, etc), the disk space for keeping a single value
    # may vary from 40 bytes to hundreds of bytes. Normally it is around 50 bytes per value.
    # depending on database type, requires about 128 bytes per each total.
    # Suppose we would like to keep trend data for 6 months.
    # event requires approximately 130 bytes of disk space. It is hard to estimate the number of events
    # generated by Monza daily. In the worst case scenario, we may assume that Monza generates one
    # event per second.

    def dbsize(self):
        historysize = self.nvps() * self.history_item_size * self.history_period * 60 * 60 * 24
        trendsize = self.hosts * self.items_per_host * self.trend_item_size * self.trend_period * 24
        eventsize = self.events * self.event_size * 60 * 60 * 24 * 365
        dbsize = historysize + trendsize + eventsize
        return dbsize


if __name__ == '__main__':
    site1 = Capacity(5000, 50, 60, 50, 128, 130, 15, 365, 1)

    print "New Values per Second = ", site1.nvps()

    print "Database size for history and trend data = ", site1.dbsize() / (1024 * 1024 * 1024), "GB"
